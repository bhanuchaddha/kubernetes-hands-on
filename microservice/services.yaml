kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: fleetman-queue
spec:
  ports:
    # Accept traffic on 30002 and send to port 80
    # This is used for management console
    - name: http
      nodePort: 30002
      port: 8161
    # port used for messaging. We dont need to expose this outside  
    - name: endpoint
      port: 61616
  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: queue
  # Create an HA proxy in the cloud provider
  # with an External IP address - *Only supported
  # by some cloud providers*
  type: NodePort

---

kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: fleetman-api-gateway #would be used for DNS
spec:
  ports:
    # Accept traffic on 30002 and send to port 80
    # This is used for management console
    - name: http
#      nodePort: 30003  #we dont need this as we dont want to expose this
      port: 8080

  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: api-gateway
  # Create an HA proxy in the cloud provider
  # with an External IP address - *Only supported
  # by some cloud providers*
  type: ClusterIP

---

kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: fleetman-webapp #would be used for DNS
spec:
  ports:
    # Accept traffic on 30002 and send to port 80
    # This is used for management console
    - name: http
      nodePort: 30003
      port: 80

  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: webapp
  # Create an HA proxy in the cloud provider
  # with an External IP address - *Only supported
  # by some cloud providers*
  type: NodePort